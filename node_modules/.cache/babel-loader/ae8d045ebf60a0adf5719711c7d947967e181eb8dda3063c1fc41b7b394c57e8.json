{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gadget\\\\Desktop\\\\newprj\\\\src\\\\components\\\\PostList.js\",\n  _s = $RefreshSig$();\n// PostList.js\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Card, CardContent, Typography, Button, Divider, TextField, Grid } from '@mui/material';\nimport { deletePost } from '../redux/actions';\nimport useStyles from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = () => {\n  _s();\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.posts);\n  const [searchTerm, setSearchTerm] = useState('');\n  const reversedPosts = [...posts].reverse();\n  const filteredPosts = reversedPosts.filter(post => post.title.toLowerCase().includes(searchTerm.toLowerCase()) || post.body.toLowerCase().includes(searchTerm.toLowerCase()));\n  const classes = useStyles();\n  const handleDelete = postId => {\n    // Dispatch the action to delete post from Redux store\n    dispatch(deletePost(postId));\n    try {\n      // Retrieve existing posts from local storage\n      const storedPosts = JSON.parse(localStorage.getItem('posts')) || [];\n\n      // Remove the deleted post from the array\n      const updatedPosts = storedPosts.filter(post => post.id !== postId);\n\n      // Save the updated posts to local storage\n      localStorage.setItem('posts', JSON.stringify(updatedPosts));\n    } catch (error) {\n      console.error('Error deleting from local storage:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 3,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Recent Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Search Posts\",\n        variant: \"outlined\",\n        fullWidth: true,\n        margin: \"normal\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), filteredPosts.map(post => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 4,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.postCard,\n        children: [/*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            className: classes.divider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            className: classes.postBody,\n            children: post.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          className: classes.deleteButton,\n          onClick: () => handleDelete(post.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(PostList, \"mU55gi3DVAt4PJVcrjtgWGSXWjY=\", false, function () {\n  return [useDispatch, useSelector, useStyles];\n});\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","Card","CardContent","Typography","Button","Divider","TextField","Grid","deletePost","useStyles","jsxDEV","_jsxDEV","PostList","_s","dispatch","posts","state","searchTerm","setSearchTerm","reversedPosts","reverse","filteredPosts","filter","post","title","toLowerCase","includes","body","classes","handleDelete","postId","storedPosts","JSON","parse","localStorage","getItem","updatedPosts","id","setItem","stringify","error","console","container","spacing","children","item","xs","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","label","fullWidth","margin","value","onChange","e","target","map","sm","md","className","postCard","divider","color","postBody","deleteButton","onClick","_c","$RefreshReg$"],"sources":["C:/Users/gadget/Desktop/newprj/src/components/PostList.js"],"sourcesContent":["// PostList.js\r\nimport React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Card, CardContent, Typography, Button, Divider, TextField, Grid } from '@mui/material';\r\nimport { deletePost } from '../redux/actions';\r\nimport useStyles from './styles';\r\n\r\nconst PostList = () => {\r\n  const dispatch = useDispatch();\r\n  const posts = useSelector((state) => state.posts);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const reversedPosts = [...posts].reverse();\r\n  const filteredPosts = reversedPosts.filter((post) =>\r\n    post.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    post.body.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n  const classes = useStyles();\r\n\r\n  const handleDelete = (postId) => {\r\n    // Dispatch the action to delete post from Redux store\r\n    dispatch(deletePost(postId));\r\n\r\n    try {\r\n      // Retrieve existing posts from local storage\r\n      const storedPosts = JSON.parse(localStorage.getItem('posts')) || [];\r\n\r\n      // Remove the deleted post from the array\r\n      const updatedPosts = storedPosts.filter((post) => post.id !== postId);\r\n\r\n      // Save the updated posts to local storage\r\n      localStorage.setItem('posts', JSON.stringify(updatedPosts));\r\n    } catch (error) {\r\n      console.error('Error deleting from local storage:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          Recent Posts\r\n        </Typography>\r\n        <TextField\r\n          label=\"Search Posts\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n        />\r\n      </Grid>\r\n      {filteredPosts.map((post) => (\r\n        <Grid item xs={12} sm={6} md={4} key={post.id}>\r\n          <Card className={classes.postCard}>\r\n            <CardContent>\r\n              <Typography variant=\"h6\">{post.title}</Typography>\r\n              <Divider className={classes.divider} />\r\n              <Typography variant=\"body2\" color=\"textSecondary\" className={classes.postBody}>\r\n                {post.body}\r\n              </Typography>\r\n            </CardContent>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              className={classes.deleteButton}\r\n              onClick={() => handleDelete(post.id)}\r\n            >\r\n              Delete\r\n            </Button>\r\n          </Card>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default PostList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}