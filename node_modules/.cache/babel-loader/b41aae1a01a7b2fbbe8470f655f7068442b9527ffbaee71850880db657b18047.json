{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gadget\\\\Desktop\\\\newprj\\\\src\\\\components\\\\AddPostForm.js\",\n  _s = $RefreshSig$();\n// AddPostForm.js\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addPost } from '../redux/actions';\nimport { TextField, Button } from '@mui/material';\nimport useStyles from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddPostForm = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [title, setTitle] = useState('');\n  const classes = useStyles();\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newPost = {\n      title,\n      body: 'Lorem ipsum...',\n      userId: 1,\n      id: Date.now()\n    };\n\n    // Dispatch the action to add post to Redux store\n    dispatch(addPost(newPost));\n    try {\n      // Retrieve existing posts from local storage\n      const storedPosts = JSON.parse(localStorage.getItem('posts')) || [];\n\n      // Add the new post to the beginning of the array\n      const updatedPosts = [newPost, ...storedPosts];\n\n      // Save the updated posts to local storage\n      localStorage.setItem('posts', JSON.stringify(updatedPosts));\n\n      // Clear the title input\n      setTitle('');\n    } catch (error) {\n      console.error('Error saving to local storage:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.addPostForm,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create a Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"What's on your mind?\",\n        variant: \"outlined\",\n        fullWidth: true,\n        multiline: true,\n        rows: 4,\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        style: {\n          marginBottom: '15px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.addPostButton,\n        style: {\n          marginTop: '10px'\n        },\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(AddPostForm, \"U+h/fQMSt8ptbOnuXK9w7WIKeB4=\", false, function () {\n  return [useDispatch, useStyles];\n});\n_c = AddPostForm;\nexport default AddPostForm;\nvar _c;\n$RefreshReg$(_c, \"AddPostForm\");","map":{"version":3,"names":["React","useState","useDispatch","addPost","TextField","Button","useStyles","jsxDEV","_jsxDEV","AddPostForm","_s","dispatch","title","setTitle","classes","handleSubmit","e","preventDefault","newPost","body","userId","id","Date","now","storedPosts","JSON","parse","localStorage","getItem","updatedPosts","setItem","stringify","error","console","className","addPostForm","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","label","variant","fullWidth","multiline","rows","value","onChange","target","style","marginBottom","type","color","addPostButton","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/gadget/Desktop/newprj/src/components/AddPostForm.js"],"sourcesContent":["// AddPostForm.js\r\nimport React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addPost } from '../redux/actions';\r\nimport { TextField, Button } from '@mui/material';\r\nimport useStyles from './styles';\r\n\r\nconst AddPostForm = () => {\r\n  const dispatch = useDispatch();\r\n  const [title, setTitle] = useState('');\r\n  const classes = useStyles();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newPost = { title, body: 'Lorem ipsum...', userId: 1, id: Date.now() };\r\n\r\n    // Dispatch the action to add post to Redux store\r\n    dispatch(addPost(newPost));\r\n\r\n    try {\r\n      // Retrieve existing posts from local storage\r\n      const storedPosts = JSON.parse(localStorage.getItem('posts')) || [];\r\n\r\n      // Add the new post to the beginning of the array\r\n      const updatedPosts = [newPost, ...storedPosts];\r\n\r\n      // Save the updated posts to local storage\r\n      localStorage.setItem('posts', JSON.stringify(updatedPosts));\r\n\r\n      // Clear the title input\r\n      setTitle('');\r\n    } catch (error) {\r\n      console.error('Error saving to local storage:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.addPostForm}>\r\n      <h2>Create a Post</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <TextField\r\n          label=\"What's on your mind?\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          multiline\r\n          rows={4}\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          style={{ marginBottom: '15px' }}\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.addPostButton}\r\n          style={{ marginTop: '10px' }}\r\n        >\r\n          Post\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddPostForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}